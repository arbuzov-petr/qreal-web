<?xml version='1.0' encoding='utf-8'?>
<root>
    <world>
        <walls>
            <wall begin="-300:-400" end="450:-400" id=""/>
            <wall begin="-300:-400" end="-300:200" id=""/>
            <wall begin="-300:200" end="450:200" id=""/>
            <wall begin="450:-250" end="450:200" id=""/>
            <wall begin="150:-400" end="150:-100" id=""/>
            <wall begin="300:-250" end="300:50" id=""/>
            <wall begin="300:-250" end="450:-250" id=""/>
            <wall begin="-300:-250" end="-150:-250" id=""/>
            <wall begin="-150:-250" end="0:-250" id=""/>
            <wall begin="150:-100" end="-150:-100" id=""/>
            <wall begin="-150:50" end="150:50" id=""/>
            <wall begin="150:50" end="150:200" id=""/>
        </walls>
        <colorFields>
            <line begin="-114:-200" fill-style="none" stroke="#008000" end="-114:-150" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="-93:-150" fill-style="none" stroke="#008000" end="-93:-200" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="-65:-200" fill-style="none" stroke="#008000" end="-65:-150" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="-26:-50" fill-style="none" stroke="#ff0000" end="-26:0" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="0:-50" fill-style="none" stroke="#ff0000" end="0:0" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="27:-50" fill-style="none" stroke="#ff0000" end="27:0" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="350:-85" fill-style="none" stroke="#ff0000" end="400:-85" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="350:-60" fill-style="none" stroke="#ff0000" end="400:-60" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="350:-35" fill-style="none" stroke="#ff0000" end="400:-35" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="200:-210" fill-style="none" stroke="#008000" end="200:-155" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="225:-210" fill-style="none" stroke="#008000" end="225:-155" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
            <line begin="250:-210" fill-style="none" stroke="#008000" end="250:-155" fill="#000000" stroke-style="solid" stroke-width="30" id=""/>
        </colorFields>
        <regions>
            <region visible="true" color="#0000ff" filled="true" type="rectangle" height="150" width="150" id="start zone" y="-400" text="Старт" x="-300" textX="10" textY="10"/>
            <region visible="true" color="#ff0000" filled="true" type="rectangle" height="150" width="150" y="-400" text="Финиш" x="450" textX="0" textY="0"/>
            <region visible="false" color="#87cefa" filled="true" type="rectangle" height="600" width="1050" id="warzone" y="-400" x="-450"/>
            <region visible="false" color="#87cefa" filled="true" type="rectangle" height="90" width="90" id="factical finish" y="-370" x="480"/>
            <region visible="false" color="#00ff00" filled="true" type="rectangle" height="150" width="150" id="checkpoint0" y="50" x="0"/>
            <region visible="false" color="#00ff00" filled="true" type="rectangle" height="150" width="150" id="checkpoint1" y="-100" x="-150"/>
            <region visible="false" color="#00ff00" filled="true" type="rectangle" height="150" width="150" id="checkpoint2" y="-250" x="300"/>
            <region visible="false" color="#00ff00" filled="true" type="rectangle" height="150" width="150" id="checkpoint3" y="-250" x="150"/>
        </regions>
    </world>
    <robots>
        <robot direction="0" id="trikKitRobot" position="-250:-350">
            <sensors>
                <sensor type="trik::robotModel::parts::TrikInfraredSensor" port="A2###input######sensorA2" direction="90" position="24:24"/>
                <sensor type="kitBase::robotModel::robotParts::LightSensor" port="A3###input######sensorA3" direction="0" position="13:35"/>
                <sensor type="kitBase::robotModel::robotParts::Motor" port="M3###output######" direction="0" position="75:25"/>
                <sensor type="kitBase::robotModel::robotParts::Motor" port="M2###output######" direction="0" position="75:25"/>
                <sensor type="trik::robotModel::parts::TrikInfraredSensor" port="A1###input######sensorA1" direction="0" position="26:26"/>
                <sensor type="kitBase::robotModel::robotParts::Motor" port="M4###output######" direction="0" position="75:25"/>
                <sensor type="kitBase::robotModel::robotParts::Motor" port="M1###output######" direction="0" position="75:25"/>
                <sensor type="kitBase::robotModel::robotParts::LightSensor" port="A4###input######sensorA4" direction="0" position="38:35"/>
            </sensors>
            <startPosition direction="0" y="-325" x="-225"/>
            <wheels right="M4###output######" left="M3###output######"/>
        </robot>
    </robots>
    <constraints>

        <!-- 5 min -->
        <timelimit value="300000"/>

        <constraint checkOnce="true" failMessage="Робот должен находиться в зоне старта перед запуском!">
            <inside objectId="robot1" regionId="start zone"/>
        </constraint>

        <constraint checkOnce="true" failMessage="У робота должны быть 2 инфракрасных сенсора на портах A1 и A2 и 2 сенсора света на портах А3 и А4">
            <conditions glue="and">
                <equals>
                    <typeOf objectId="robot1.A1"/>
                    <string value="trik::robotModel::twoD::parts::TwoDInfraredSensor"/>
                </equals>
                <equals>
                    <typeOf objectId="robot1.A2"/>
                    <string value="trik::robotModel::twoD::parts::TwoDInfraredSensor"/>
                </equals>
                <equals>
                    <typeOf objectId="robot1.A3"/>
                    <string value="twoDModel::robotModel::parts::LightSensor"/>
                </equals>
                <equals>
                    <typeOf objectId="robot1.A4"/>
                    <string value="twoDModel::robotModel::parts::LightSensor"/>
                </equals>
                <equals>
                    <typeOf objectId="robot1.A5"/>
                    <string value="undefined"/>
                </equals>
                <equals>
                    <typeOf objectId="robot1.A6"/>
                    <string value="undefined"/>
                </equals>
                <equals>
                    <typeOf objectId="robot1.D1"/>
                    <string value="undefined"/>
                </equals>
                <equals>
                    <typeOf objectId="robot1.D2"/>
                    <string value="undefined"/>
                </equals>
                <equals>
                    <typeOf objectId="robot1.F1"/>
                    <string value="undefined"/>
                </equals>
            </conditions>
        </constraint>

        <constraint failMessage="Робот попытался объехать лабиринт!">
            <inside objectId="robot1" regionId="warzone"/>
        </constraint>

        <!-- Событие, которое говорит о том, что робот вообще поехал и стартует цепочку проверки -->
        <event settedUpInitially="true" id="We are alive, first move">
            <condition>
                <greater>
                    <objectState object="robot1.M3.power"/>
                    <int value="0"/>
                </greater>
            </condition>
            <triggers>
                <setUp id="Checkpoint0"/>
                <setUp id="Checkpoint0_fails"/>
                <setUp id="Led off"/>
                <setUp id="Green area"/>
                <setUp id="Red area"/>
            </triggers>
        </event>

        <!-- Событие, которое выдает ошибку, если робот не тронулся с места в первую секунду -->
        <event settedUpInitially="true" id="Waiting for going forward too long">
            <conditions glue="and">
                <timer forceDropOnTimeout="true" timeout="1000"/>
                <settedUp id="We are alive, first move"/>
            </conditions>
            <trigger>
                <fail message="Робот так и не поехал в первую секунду"/>
            </trigger>
        </event>

        <!-- Событие, которое выводит ошибку, если у робота включен светодиод, когда он не на цветном пятне -->
        <event id="Led off">
            <conditions glue="and">
                <timer timeout="150" forceDropOnTimeout="false"/>
                <greater>
                    <objectState object="robot1.A3.value"/>
                    <int value="90"/>
                </greater>
                <equals>
                    <objectState object="robot1.A4.value"/>
                    <objectState object="robot1.A3.value"/>
                </equals>
                <not>
                    <equals>
                        <objectState object="robot1.led.color"/>
                        <string value="#a0a0a4"/>
                    </equals>
                </not>
            </conditions>
            <trigger>
                <fail message="У робота должен быть выключен светодиод, когда он не на цветном пятне"/>
            </trigger>
        </event>

        <!-- Событие, которое взводит ожидание красного светодиода -->
        <event id="Red area" dropsOnFire="false">
            <conditions glue="and">
                <less>
                    <objectState object="robot1.A3.value"/>
                    <int value="30"/>
                </less>
                <equals>
                    <objectState object="robot1.A4.value"/>
                    <objectState object="robot1.A3.value"/>
                </equals>
            </conditions>
            <triggers>
                <drop id="Led off"/>
                <setUp id="Wait for red led"/>
				<setUp id="Fail red led"/>
            </triggers>
        </event>

		<!-- Событие, которое ожидает включение красного светодиода -->
		<event id="Wait for red led">
			<condition>
				<equals>
                	<objectState object="robot1.led.color"/>
                    <string value="red"/>
				</equals>
			</condition>
			<triggers>
				<drop id="Fail red led"/>
                <setter name="flashingCounter">
                    <int value="1"/>
                </setter>
                <setUp id="Check red flashing"/>
                <setUp id="Led off while red flashing"/>
                <setUp id="Fail red flashing"/>
			</triggers>
		</event>

        <!-- Событие, сообщающее об ошибке, если за 1000 мс не включился красный светодиод -->
        <event id="Fail red led">
            <condition>
                <timer timeout="1000"/>
            </condition>
            <trigger>
                <fail message="Робот должен помигать красным светодиодом на красном пятне"/>
            </trigger>
        </event>

        <!-- Событие, сообщающее об ошибке, если красный светодиод просто был включен или мигал с неправильной частотой -->
        <event id="Fail red flashing">
            <condition>
                <timer timeout="7000"/>
            </condition>
            <triggers>
                <fail message="Робот просто включил красный светодиод или мигал им с неправильной частотой"/>
            </triggers>
        </event>

        <!-- Событие для проверки частоты мигания красного свтодиода -->
        <event id="Check red flashing">
            <condition>
                <equals>
                    <variableValue name="flashingCounter"/>
                    <int value="4"/>
                </equals>
            </condition>
            <triggers>
                <drop id="Fail red flashing"/>
                <drop id="Led off while red flashing"/>
                <drop id="Led red while red flashing"/>
                <setUp id="Led off"/>
            </triggers>
        </event>

        <!-- Событие, возникающее, когда светодиод выключен во время проверки частоты мигания красного светодиода -->
        <event id="Led off while red flashing">
            <condition>
                <equals>
                    <objectState object="robot1.led.color"/>
                    <string value="#a0a0a4"/>
                </equals>
            </condition>
            <trigger>
                <setUp id="Led red while red flashing"/>
            </trigger>
        </event>

        <!-- Событие, возникающее, когда включен красный светодиод во вермя проверки частоты мигания красного светодиода -->
        <event id="Led red while red flashing">
            <condition>
                <equals>
                    <objectState object="robot1.led.color"/>
                    <string value="red"/>
                </equals>
            </condition>
            <triggers>
                <setter name="flashingCounter">
                    <sum>
                        <variableValue name="flashingCounter"/>
                        <int value="1"/>
                    </sum>
                </setter>
                <setUp id="Led off while red flashing"/>
            </triggers>
        </event>

        <!-- Событие, которое взводит ожидание зеленого светодиода -->
        <event id="Green area" dropsOnFire="false">
            <conditions glue="and">
                <less>
                    <objectState object="robot1.A3.value"/>
                    <int value="50"/>
                </less>
                <greater>
                    <objectState object="robot1.A3.value"/>
                    <int value="30"/>
                </greater>
                <equals>
                    <objectState object="robot1.A4.value"/>
                    <objectState object="robot1.A3.value"/>
                </equals>
            </conditions>
            <triggers>
                <drop id="Led off"/>
                <setUp id="Wait for green led"/>
				<setUp id="Fail green led"/>
            </triggers>
        </event>

        <!-- Событие, которое ожидает включение зеленого светодиода -->
        <event id="Wait for green led">
            <condition>
                <equals>
                	<objectState object="robot1.led.color"/>
                	<string value="green"/>
            	</equals>
            </condition>
            <triggers>
                <drop id="Fail green led"/>
                <setter name="flashingCounter">
                    <int value="1"/>
                </setter>
                <setUp id="Check green flashing"/>
                <setUp id="Led off while green flashing"/>
                <setUp id="Fail green flashing"/>
            </triggers>
        </event>

		<!-- Событие, сообщающее об ошибке, если за 500 мс не включился зеленый светодиод -->
		<event id="Fail green led">
			<condition>
				<timer timeout="500"/>
			</condition>
			<trigger>
				<fail message="Робот должен помигать зеленым светодиодом на зеленом пятне"/>
			</trigger>
		</event>

        <!-- Событие, сообщающее об ошибке, если зеленый светодиод просто был включен или мигал с неправильной частотой -->
        <event id="Fail green flashing">
            <condition>
                <timer timeout="7000"/>
            </condition>
            <triggers>
                <fail message="Робот просто включил зеленый светодиод или мигал им с неправильной частотой"/>
            </triggers>
        </event>

        <!-- Событие для проверки частоты мигания зеленого светодиода -->
        <event id="Check green flashing">
            <condition>
                <equals>
                    <variableValue name="flashingCounter"/>
                    <int value="8"/>
                </equals>
            </condition>
            <triggers>
                <drop id="Fail green flashing"/>
                <drop id="Led off while green flashing"/>
                <drop id="Led green while green flashing"/>
                <setUp id="Led off"/>
            </triggers>
        </event>

        <!-- Событие, возникающее, когда светодиод выключен во время проверки частоты мигания зеленого светодиода -->
        <event id="Led off while green flashing">
            <condition>
                <equals>
                    <objectState object="robot1.led.color"/>
                    <string value="#a0a0a4"/>
                </equals>
            </condition>
            <trigger>
                <setUp id="Led green while green flashing"/>
            </trigger>
        </event>

        <!-- Событие, возникающее, когда включен зеленый светодиод во время проверки частоты мигания зеленого светодиода -->
        <event id="Led green while green flashing">
            <condition>
                <equals>
                    <objectState object="robot1.led.color"/>
                    <string value="green"/>
                </equals>
            </condition>
            <triggers>
                <setter name="flashingCounter">
                    <sum>
                        <variableValue name="flashingCounter"/>
                        <int value="1"/>
                    </sum>
                </setter>
                <setUp id="Led off while green flashing"/>
            </triggers>
        </event>

        <!-- событие, возникающее, когда робот проезжает первый чекпоинт -->
        <event id="Checkpoint0">
            <condition>
                <inside objectId="robot1" regionId="checkpoint0"/>
            </condition>
            <triggers>
                <setUp id="Checkpoint1"/>
                <drop id="Checkpoint0_fails"/>
            </triggers>
        </event>

        <!-- событие, сообщающее об ошибке, если робот приехал на второй чекпоинт, когда должен был приехать на первый -->
        <event id="Checkpoint0_fails">
            <conditions glue="and">
                <settedUp id="Checkpoint0"/>
                <inside objectId="robot1" regionId="checkpoint1"/>
            </conditions>
            <trigger>
                <fail message="Робот едет не по правилу правой руки"/>
            </trigger>
        </event>

        <!-- событие, возникающее, когда робот проезжает второй чекпоинт -->
        <event id="Checkpoint1">
            <condition>
                <inside objectId="robot1" regionId="checkpoint1"/>
            </condition>
            <triggers>
                <setUp id="Checkpoint2"/>
                <setUp id="Checkpoint2_fails"/>
            </triggers>
        </event>

        <!-- событие, возникающее, когда робот проезжает третий чекпоинт -->
        <event id="Checkpoint2">
            <condition>
                <inside objectId="robot1" regionId="checkpoint2"/>
            </condition>
            <triggers>
                <setUp id="Checkpoint3"/>
                <drop id="Checkpoint2_fails"/>
            </triggers>
        </event>

        <!-- событие, сообщающее об ошибке, если робот приехал на четвертый чекпоинт, когда должен был приехать на третий -->
        <event id="Checkpoint2_fails">
            <conditions glue="and">
                <settedUp id="Checkpoint2"/>
                <inside objectId="robot1" regionId="checkpoint3"/>
            </conditions>
            <trigger>
                <fail message="Робот едет не по правилу правой руки"/>
            </trigger>
        </event>

        <!-- событие, возникающее, когда робот проезжает четвертый чекпоинт -->
        <event id="Checkpoint3">
            <condition>
                <inside objectId="robot1" regionId="checkpoint3"/>
            </condition>
            <trigger>
                <setUp id="Finish"/>
            </trigger>
        </event>

        <!-- событие, сообщающее об успехе, когда робот приехал на финиш" -->
        <event id="Finish">
            <condition>
                <inside objectId="robot1" regionId="factical finish"/>
            </condition>
            <trigger>
                <success/>
            </trigger>
        </event>
    </constraints>
</root>
